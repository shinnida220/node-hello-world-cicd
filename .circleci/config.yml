# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_infrastrcuture:
    steps:
      - run:
          name: Destroy Infrastructure
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1

# Define a job to be invoked later in a workflow.
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create CloudFormation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["49:01:d4:24:62:d9:50:6b:af:73:ba:0d:9b:2e:f4:0c"]
      - run:
          name: Install Dependencies (Ansible)
          command: |
            apk add --update ansible
      - run:
          name: Confgure Server
          command: |
            ansible-playbook -i inventory.txt main-remote.yml

  smoke_test:
    docker:
      - image: amazon/aws-cli #alpine:latest
    steps:
      # - run: apk add --update curl
      # - run:
      #     name: Smoke Test
      #     command: |
      #       # URL="https://blog.udacity.com/"
      #       # #Test if website exists
      #       # if curl -s --head ${URL}
      #       # then
      #       #   return 0
      #       # else
      #       #   return 1
      #       # fi
      - run:
          name: Simulate error
          command: |
            return 1 #simmulate returning a non zero (0) exit code so the job will fail
      - destroy_infrastrcuture

# Invoke jobs via workflows
workflows:
  my-workflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure
